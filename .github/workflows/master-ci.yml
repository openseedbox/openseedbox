name: master branch CI

on:
  push:
    branches:
      - master

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/${{ github.repository_owner }}/openseedbox/client
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi
          echo tags=${TAGS} >> ${GITHUB_OUTPUT}
          echo platforms=linux/amd64,linux/arm/v7,linux/arm64 >> ${GITHUB_OUTPUT}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ steps.prep.outputs.platforms }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker images
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ steps.prep.outputs.platforms }}
          context: "{{defaultContext}}:docker"
          target: builder
          build-args: CACHEBUSTER=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test and export results
        id: docker_test
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ steps.prep.outputs.platforms }}
          context: "{{defaultContext}}:docker"
          target: tester
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=tar,dest=./buildx-files.tar

      - name: Extract test results
        run: |
          mkdir -p buildx-files
          cd buildx-files
          tar -xvf ../buildx-files.tar --wildcards '*/src/openseedbox*/test-result/*'

      - name: Save test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: buildx-files/linux*/src/openseedbox*/test-result/

      - name: All tests passed
        run: |
          PLATFORM_COUNT=$(echo ${{ steps.prep.outputs.platforms }}| tr '/,' '_ '|xargs -n 1 echo|wc -l)
          PASSED_COUNT=$(find buildx-files/*/src/openseedbox*/test-result/result.passed |wc -l)
          test $PLATFORM_COUNT -eq $PASSED_COUNT

      - name: Finish building and push to registry
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ steps.prep.outputs.platforms }}
          context: "{{defaultContext}}:docker"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
